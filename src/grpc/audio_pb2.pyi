"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _AudioFormat:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _AudioFormatEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AudioFormat.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    PCM16: _AudioFormat.ValueType  # 0
    PCM32: _AudioFormat.ValueType  # 1
    PCM32_FLOAT: _AudioFormat.ValueType  # 2
    MP3: _AudioFormat.ValueType  # 3
    WAV: _AudioFormat.ValueType  # 4

class AudioFormat(_AudioFormat, metaclass=_AudioFormatEnumTypeWrapper): ...

PCM16: AudioFormat.ValueType  # 0
PCM32: AudioFormat.ValueType  # 1
PCM32_FLOAT: AudioFormat.ValueType  # 2
MP3: AudioFormat.ValueType  # 3
WAV: AudioFormat.ValueType  # 4
global___AudioFormat = AudioFormat

@typing.final
class AudioInfo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FORMAT_FIELD_NUMBER: builtins.int
    SAMPLE_RATE_FIELD_NUMBER: builtins.int
    CHANNELS_FIELD_NUMBER: builtins.int
    format: global___AudioFormat.ValueType
    sample_rate: builtins.int
    channels: builtins.int
    def __init__(
        self,
        *,
        format: global___AudioFormat.ValueType = ...,
        sample_rate: builtins.int = ...,
        channels: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["channels", b"channels", "format", b"format", "sample_rate", b"sample_rate"]) -> None: ...

global___AudioInfo = AudioInfo

@typing.final
class RecordRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    DURATION_SECONDS_FIELD_NUMBER: builtins.int
    INFO_FIELD_NUMBER: builtins.int
    name: builtins.str
    duration_seconds: builtins.int
    @property
    def info(self) -> global___AudioInfo: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        duration_seconds: builtins.int = ...,
        info: global___AudioInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["info", b"info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["duration_seconds", b"duration_seconds", "info", b"info", "name", b"name"]) -> None: ...

global___RecordRequest = RecordRequest

@typing.final
class AudioChunk(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    AUDIO_DATA_FIELD_NUMBER: builtins.int
    TIMESTAMP_FIELD_NUMBER: builtins.int
    SEQUENCE_FIELD_NUMBER: builtins.int
    INFO_FIELD_NUMBER: builtins.int
    audio_data: builtins.bytes
    """Raw PCM audio data"""
    timestamp: builtins.int
    """Timestamp in microseconds"""
    sequence: builtins.int
    """Sequence number"""
    @property
    def info(self) -> global___AudioInfo: ...
    def __init__(
        self,
        *,
        audio_data: builtins.bytes = ...,
        timestamp: builtins.int = ...,
        sequence: builtins.int = ...,
        info: global___AudioInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["info", b"info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["audio_data", b"audio_data", "info", b"info", "sequence", b"sequence", "timestamp", b"timestamp"]) -> None: ...

global___AudioChunk = AudioChunk

@typing.final
class PlayRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    AUDIO_DATA_FIELD_NUMBER: builtins.int
    FORMAT_FIELD_NUMBER: builtins.int
    SAMPLE_RATE_FIELD_NUMBER: builtins.int
    CHANNELS_FIELD_NUMBER: builtins.int
    name: builtins.str
    audio_data: builtins.bytes
    format: global___AudioFormat.ValueType
    sample_rate: builtins.int
    """required if format is pcm, optional otherwise"""
    channels: builtins.int
    """required if format is pcm, optional otherwise"""
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        audio_data: builtins.bytes = ...,
        format: global___AudioFormat.ValueType = ...,
        sample_rate: builtins.int = ...,
        channels: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["audio_data", b"audio_data", "channels", b"channels", "format", b"format", "name", b"name", "sample_rate", b"sample_rate"]) -> None: ...

global___PlayRequest = PlayRequest

@typing.final
class PlayResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    name: builtins.str
    def __init__(
        self,
        *,
        name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["name", b"name"]) -> None: ...

global___PlayResponse = PlayResponse

@typing.final
class PropertiesRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    name: builtins.str
    def __init__(
        self,
        *,
        name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["name", b"name"]) -> None: ...

global___PropertiesRequest = PropertiesRequest

@typing.final
class PropertiesResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SUPPORTEDFORMATS_FIELD_NUMBER: builtins.int
    CHANNELS_FIELD_NUMBER: builtins.int
    channels: builtins.int
    @property
    def supportedFormats(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___AudioFormat.ValueType]: ...
    def __init__(
        self,
        *,
        supportedFormats: collections.abc.Iterable[global___AudioFormat.ValueType] | None = ...,
        channels: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["channels", b"channels", "supportedFormats", b"supportedFormats"]) -> None: ...

global___PropertiesResponse = PropertiesResponse
